// Code generated by mockery v2.4.0. DO NOT EDIT.

package mocks

import (
	name "github.com/google/go-containerregistry/pkg/name"
	remote "github.com/google/go-containerregistry/pkg/v1/remote"
	mock "github.com/stretchr/testify/mock"

	v1 "github.com/google/go-containerregistry/pkg/v1"
)

// ImageFunction is an autogenerated mock type for the ImageFunction type
type ImageFunction struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *ImageFunction) Execute(_a0 name.Reference, _a1 ...remote.Option) (v1.Image, error) {
	_va := make([]interface{}, len(_a1))
	for _i := range _a1 {
		_va[_i] = _a1[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 v1.Image
	if rf, ok := ret.Get(0).(func(name.Reference, ...remote.Option) v1.Image); ok {
		r0 = rf(_a0, _a1...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1.Image)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(name.Reference, ...remote.Option) error); ok {
		r1 = rf(_a0, _a1...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
